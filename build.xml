<?xml version="1.0" encoding="UTF-8"?>
<project name="OpenRoss" default="build">
 <property name="php" value="php"/>

 <target name="clean" description="Cleanup build artifacts">
  <!--<delete dir="${basedir}/bin"/>-->
  <!--<delete dir="${basedir}/vendor"/>-->
  <!--<delete file="${basedir}/composer.lock"/>-->
  <delete dir="${basedir}/build/html"/>
  <delete dir="${basedir}/build/docs"/>
  <delete dir="${basedir}/build/code-browser"/>
  <delete dir="${basedir}/build/coverage"/>
  <delete dir="${basedir}/build/logs"/>
  <delete dir="${basedir}/build/output"/>
  <delete dir="${basedir}/build/pdepend"/>
 </target>

 <target name="install" depends="download-composer,composer" />
 
 <target name="build"
   depends="prepare,lint,phploc,phpcs-ci,phpmd-ci,phpcpd,phpunit,teamcity-clover,pdepend,phpcb,phpdoc"/>

 <target name="prepare" description="Prepare for build">
  <mkdir dir="${basedir}/build/html"/>
  <mkdir dir="${basedir}/build/docs"/>
  <mkdir dir="${basedir}/build/code-browser"/>
  <mkdir dir="${basedir}/build/coverage"/>
  <mkdir dir="${basedir}/build/logs"/>
  <mkdir dir="${basedir}/build/output"/>
  <mkdir dir="${basedir}/build/pdepend"/>
 </target>

 <target name="download-composer" description="Downloads composer.phar (when it does not exist or is older than 30 days)">
  <tstamp>
   <format property="thirty.days.ago" pattern="MM/dd/yyyy hh:mm aa" offset="-30" unit="day"/>
  </tstamp>
  <delete>
   <fileset dir="${basedir}">
    <include name="composer.phar" />
    <date datetime="${thirty.days.ago}" when="before"/>
   </fileset>
  </delete>

  <get src="https://getcomposer.org/composer.phar" dest="${basedir}/composer.phar" skipexisting="true"/>
 </target>

 <target name="composer" depends="download-composer" description="Install dependencies with Composer">

  <exec executable="php">
   <arg value="composer.phar"/>
   <arg value="install"/>
  </exec>
 </target>

 <target name="lint">
  <apply executable="${php}" append="true" output="${basedir}/build/output/lint.txt">
   <arg value="-l" />

   <fileset dir="${basedir}/src">
    <include name="**/*.php" />
   </fileset>
  </apply>
  <echo message="###teamcity[publishArtifacts '${basedir}/build/output/lint.txt']" />
 </target>

 <target name="phploc" description="Measure project size using PHPLOC">
  <exec executable="phploc" output="${basedir}/build/output/phploc.txt">
   <arg value="--log-xml" />
   <arg value="${basedir}/build/logs/phploc.xml" />
   <arg path="${basedir}/src" />
  </exec>
  <echo message="###teamcity[publishArtifacts '${basedir}/build/output/phploc.txt']" />
 </target>

 <target name="phpcs-ci"
         description="Find coding standard violations using PHP_CodeSniffer">
  <exec executable="phpcs" output="${basedir}/build/output/phpcs-ci.txt">
   <arg value="--report=checkstyle" />
   <arg value="--report-file=${basedir}/build/logs/checkstyle.xml" />
   <arg value="--standard=PSR2" />
   <arg value="--extensions=php" />
   <arg path="${basedir}/src" />
  </exec>
  <!--<echo message="##teamcity[importData type='checkstyle' path='${basedir}/build/logs/checkstyle.xml']"/>-->
 </target>

 <target name="phpmd-ci"
         description="Perform project mess detection using PHPMD">
  <exec executable="phpmd" output="${basedir}/build/output/phpmd-ci.txt">
   <arg path="${basedir}/src" />
   <arg value="xml" />
   <arg value="${basedir}/build/phpmd.xml" />
   <arg value="--reportfile" />
   <arg value="${basedir}/build/logs/pmd.xml" />
  </exec>
  <!--<echo message="##teamcity[importData type='pmd' path='${basedir}/build/logs/pmd.xml']"/>-->
 </target>

 <target name="phpcpd" description="Find duplicate code using PHPCPD">
  <exec executable="phpcpd" output="${basedir}/build/output/phpcpd.txt">
   <arg value="--log-pmd" />
   <arg value="${basedir}/build/logs/pmd-cpd.xml" />
   <arg path="${basedir}/src" />
  </exec>
  <!--<echo message="##teamcity[importData type='pmdCpd' path='${basedir}/build/logs/pmd-cpd.xml']"/>-->
 </target>

 <target name="phpunit" description="Run unit tests with PHPUnit">
  <exec executable="phpunit" output="${basedir}/build/output/phpunit.txt">
   <arg value="-c" />
   <arg path="${basedir}/app" />
   <arg path="${basedir}/src" />
  </exec>
  <!--<echo message="##teamcity[importData type='junit' path='${basedir}/build/logs/junit.xml']" />-->
  <zip destfile="${basedir}/build/html/coverage.zip" basedir="${basedir}/build/coverage"/>
  <echo message="##teamcity[publishArtifacts '${basedir}/build/html/coverage.zip']" />
 </target>

 <target name="teamcity-clover"
         description="Convert clover to teamcity format">
  <exec executable="php" output="${basedir}/build/output/teamcity-clover.txt">
   <arg value="${basedir}/build/teamcity-clover.php" />
   <arg value="${basedir}/build/logs/clover.xml" />
  </exec>
 </target>

 <target name="pdepend"
         description="Calculate software metrics using PHP_Depend">
  <exec executable="pdepend" output="${basedir}/build/output/pdepend.txt">
   <arg value="--jdepend-xml=${basedir}/build/logs/jdepend.xml" />
   <arg value="--jdepend-chart=${basedir}/build/pdepend/dependencies.svg" />
   <arg value="--overview-pyramid=${basedir}/build/pdepend/overview-pyramid.svg" />
   <arg value="--coverage-report=${basedir}/build/logs/clover.xml" />
   <arg value="--summary-xml=${basedir}/build/logs/summary.xml" />
   <arg path="${basedir}/src" />
  </exec>
  <echo message="##teamcity[publishArtifacts '${basedir}/build/pdepend/dependencies.svg']" />
  <echo message="##teamcity[publishArtifacts '${basedir}/build/logs/jdepend.xml']" />
  <echo message="##teamcity[publishArtifacts '${basedir}/build/pdepend/overview-pyramid.svg']" />
  <echo message="##teamcity[publishArtifacts '${basedir}/build/logs/clover.xml']" />  
  <echo message="##teamcity[publishArtifacts '${basedir}/build/logs/summary.xml']" />
 </target>

 <target name="phpcb" description="PHP Code Browser">
  <exec executable="phpcb" output="${basedir}/build/output/phpcb.txt">
   <arg value="--log" />
   <arg path="${basedir}/build/logs" />
   <arg value="--output" />
   <arg path="${basedir}/build/code-browser/" />
   <arg value="--source" />
   <arg path="${basedir}/src/" />
  </exec>
  <zip destfile="${basedir}/build/html/cb.zip" basedir="${basedir}/build/code-browser"/>
  <echo message="##teamcity[publishArtifacts '${basedir}/build/html/cb.zip']" />
 </target>
 
 <target name="phpdoc"
         description="Generate software project documentation using phpDocumentor">
  <exec executable="phpdoc" output="${basedir}/build/output/phpdoc.txt">
   <arg line="run -d ${basedir}/src -t ${basedir}/build/docs" />
  </exec>
  <zip destfile="${basedir}/build/html/docs.zip" basedir="${basedir}/build/docs"/>
  <echo message="##teamcity[publishArtifacts '${basedir}/build/html/docs.zip']" />
 </target>

</project>
